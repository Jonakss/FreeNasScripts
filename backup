#!/bin/bash

## Parameters
# -n Name of file
# -l location of backup
# -s source
#
# -r Restore Backup

## Variables
log="/var/log/backup.log"
d=`date +%d-%m-%y_%H.%M`
n="DIF"
l="/mnt/USB/"
s="/mnt/Data/"

f=$n"_"$d"_"
ctail=full.tar.gz
itail=inc.tar.gz
dtail=f=dif.tar.gz

function writeLog {
case $2 in
	"d") echo XXX `date`  `whoami`  $1 >> $log ;
		echo XXX Danger $1 ;;
	"w") echo !!! `date`  `whoami`  $1 >> $log ;
		echo !!! Warning $1 ;;
	"" | "*") echo     `date`  `whoami`  $1 >> $log ;;
esac
}

function sendMail {
	exec &> /dev/null
	mail -s $1 $2 <<-EOT
	Aviso!: Mensaje autogenerato por servidor de archivos (NAS)

	$3

	EOT
}

## Archivo de configuracion
# backup.rc
function checkConfigurationFile {
[[ -d "$1" ]] || (writeLog "No se encuentra el archivo de configuracion ("$l") o hay permiso de lectura" d; exit -1)
}

function loadConfiguration {
	checkConfigurationFile $1
	writeLog "Cargado informacion desde $1"
}
	
args=("$@")
i=0

function checkLocation {
[[ -d $l ]] || (writeLog "No se encuentra el destino del respaldo ("$l") o no se puede escribir ahi" d; exit -1)
}

function checkSource {
[[ -d $s ]] || (writeLog "No se encuentra el origuen de respaldo ("$s") o no se puede escribir ahi" d; exit -1)
}

function doCompleteBackup {
	checkSource
	checkLocation
	
	cd $l
	local f=$f$ctail
	tar -cpzf $f $s -g /mnt/USB/backup.snap
	if [ $? -ne 0 ]; then
		echo Error
		writeLog "Error al realizar respaldo completo" d
		sendMail "Error al realizar respaldo completo" "jona.digitaldata@gmail.com" <<-EOT
		Aviso!: Mensaje autogenerado
		
		Origen: $s
		Destino: $l$f$ctail
		Tipo de respaldo: Completo
		
		Ultimas 15 lineas de log ($log)
		$(cat $log | tail -15)
		
		EOT
		return
	else
		writeLog "Respaldo completo realizado correctamente $f -> $s"
	fi
}

function doIncrementalBackup {
	checkSource
	checkLocation
	
	cd $l
	tar -cpzf $f $s

	echo Respaldo Incremental $s" > "$l$f
	writeLog "Respaldo incremetal realizado correctamente"
}

function doDiferencialBackup {
	checkSource
	checkLocation

	cd $l
	tar -cpzf $f $s -g ./backup.snap

	echo Respaldo diferencial $s" > "$l$f
	writeLog "Respaldo diferencial realizado correctamente"
}

#function restoreBackup {
	
#}

while [[ $i -lt $# ]]
do
	case ${args[$i]} in
		"-c") loadConfiguration "${args[((i+1))]}";;
		"-s") s="${args[((i+1))]}";;
		"-t") t="${args[((i+1))]}";;
		"-l") l="${args[((i+1))]}";;
	esac
	i=$((i+1))
done


case $t in
	"i") doIncrementalBackup;;
	
	"d") doDiferencialBackup;;	
	"c" | "f" | *) doCompleteBackup;;
esac

unset d
unset s
unset n
unset l
unset i
unset f
unset itail
unset ctail
unset dtail
unset log
unset args

exit 0
